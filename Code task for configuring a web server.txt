Objectives

In this lab, you learn how to perform the following tasks:

Create a Cloud Storage bucket and place an image into it.

Create a Cloud SQL instance and configure it.

Connect to the Cloud SQL instance from a web server.

Use the image in the Cloud Storage bucket on a web page.

## steps:

1. Create a Compute Engine Virtual Machine using the Google Cloud Platform (GCP) Console

1.a. gcloud compute instances create bloghost

1.b. gcloud compute firewall-rules create allow-http --action=ALLOW --destination=INGRESS --rules=http:80 --target-tags=http


1.2 Enter the following script as the value for Startup script

apt-get update
apt-get install apache2 php php-mysql -y
service apache2 restart

NOTE: Be sure to supply that script as the value of the Startup script field. If you accidentally put it into another field, it won't be executed when the VM instance starts.


2. Create a Cloud Storage bucket using the gsutil command line
export LOCATION=US

2.a. In Cloud Shell, the DEVSHELL_PROJECT_ID environment variable contains your project ID. Enter this command to make a bucket named after your project ID:
gsutil mb -l $LOCATION gs://$DEVSHELL_PROJECT_ID

2.b. Retrieve a banner image from a publicly accessible Cloud Storage location:
gsutil cp gs://cloud-training/gcpfci/my-excellent-blog.png my-excellent-blog.png

2.c. Copy the banner image to your newly created Cloud Storage bucket:
gsutil cp my-excellent-blog.png gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png

2.d. Modify the Access Control List of the object you just created so that it is readable by everyone:
gsutil acl ch -u allUsers:R gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png

Task 3:Create a Cloud SQL instance and configure it.

3.a. Creating a database

gcloud sql databases create blog-db --password=access --region=us-central1-b 

3.b. Adding user account
gcloud sql databases create --account=blogdbuser --password=access 

3.c. Add Network
gcloud network-management connectivity-tests create web front end --destination-ip-address=PUBLIC_IP/32 --destination-network=PROJECT-ID

Task 4: Configure an appliaction in a Compute ENgine instance to use Cloud SQL

4.a. change your working directory to the document root:
cd/var/www/html

4.b. Edit a file called index.php
sudo nano index.php

4.c. Paste the content below into it
<html>
<head><title>Welcome to my excellent blog</title></head>
<body>
<h1>Welcome to my excellent blog</h1>
<?php
 $dbserver = "CLOUDSQLIP";
$dbuser = "blogdbuser";
$dbpassword = "DBPASSWORD";
// In a production blog, we would not store the MySQL
// password in the document root. Instead, we would store it in a
// configuration file elsewhere on the web server VM instance.

$conn = new mysqli($dbserver, $dbuser, $dbpassword);

if (mysqli_connect_error()) {
        echo ("Database connection failed: " . mysqli_connect_error());
} else {
        echo ("Database connection succeeded.");
}
?>
</body></html>

NOTE: In a later step, you will insert your Cloud SQL instance's IP address and your database password into this file. For now, leave the file unmodified.

Press Ctrl+O and press Enter to save your edited file
Press Ctrl+X to exit the nano text editor

4.d. Restart the web server
sudo service apache2 restart

4.e. Open a browser tab and paste into the address bar
PUBLIC_ID/index.php

NOTE: Be sure to use the external IP address of your VM instance followed by /index.php. Do not use the VM instance's internal IP address. Do not use the sample IP address shown here.

4.f. When you load the page, you will see that its content includes an error message. This is because you have not yet configured PHP's connection
to your cloud instance

4.g. Return to your editor and edit the index.php
sudo nano index.php

Do the followings: In the nano text editor, replace CLOUDSQLIP with the Cloud SQL instance Public IP address that you noted above. Leave the quotation marks around the value in place.

In the nano text editor, replace DBPASSWORD with the Cloud SQL database password that you defined above. Leave the quotation marks around the value in place.

Press Ctrl+O, and then press Enter to save your edited file.

Press Ctrl+X to exit the nano text editor.

4.h. Restart the web server:
sudo service apache2 restart

4.i. Return to the web browser tab in which your opened your bloghost instance and reload the page, you should get a successful connection message
NOTE: In an actual blog, the database connection status would not be visible to blog visitors. Instead, the database connection would be managed solely by the administrator.

Task 5: Configure an appliaction in a Compute Engine instance to use a Cloud Storage object
Enter this command to set your working directory to the document root of the web server:

cd /var/www/html

Use the nano text editor to edit index.php:

sudo nano index.php

Use the arrow keys to move the cursor to the line that contains the h1 element. Press Enter to open up a new, blank screen line, and then paste the URL you copied earlier into the line.

Paste this HTML markup immediately before the URL:

<img src='

Place a closing single quotation mark and a closing angle bracket at the end of the URL:

'>

The resulting line will look like this:

<img src='https://storage.googleapis.com/qwiklabs-gcp-0005e186fa559a09/my-excellent-blog.png'>

The effect of these steps is to place the line containing <img src='...'> immediately before the line containing <h1>...</h1>

Do not copy the URL shown here. Instead, copy the URL shown by the Storage browser in your own Cloud Platform project.

Press Ctrl+O, and then press Enter to save your edited file.

Press Ctrl+X to exit the nano text editor.

Restart the web server:

sudo service apache2 restart

Return to the web browser tab in which you opened your bloghost VM instance's external IP address. When you load the page, its content now includes a banner image.

